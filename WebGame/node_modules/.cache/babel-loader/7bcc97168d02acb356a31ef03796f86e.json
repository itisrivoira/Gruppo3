{"ast":null,"code":"var _jsxFileName = \"/home/stud5c/Scrivania/KikisKey/WebGame/src/Components/QuizScreen/QuizScreen.js\",\n    _s = $RefreshSig$();\n\nimport \"./QuizScreen.css\";\nimport React, { useContext, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { gameContext } from \"../../Hooks/useContext\";\nimport usePlayerItemsManager from \"../../Hooks/usePlayerItemsManager\";\nimport useToast from \"../../Hooks/useToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizScreen = () => {\n  _s();\n\n  const {\n    gameData,\n    setShowQuizScreen\n  } = useContext(gameContext);\n  const {\n    aggiungiItem\n  } = usePlayerItemsManager();\n  const [risposta, setRisposta] = useState(\"\");\n  const {\n    showToast\n  } = useToast();\n\n  const check = () => {\n    if (risposta === gameData.current.quizCorrente.risposta) {\n      aggiungiItem(gameData.current.quizCorrente.ricompensa);\n      showToast(\"Risposta corretta\");\n    } else {\n      showToast(\"Risposta errata\");\n    }\n\n    setShowQuizScreen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenitoreDomanda\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"titoloDomanda\",\n      children: gameData.current.quizCorrente.nomeQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"testoDomandata\",\n      children: gameData.current.quizCorrente.domanda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputRisposta\",\n      placeholder: \"risposta...\",\n      onChange: e => setRisposta(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      whileHover: {\n        scale: 1.025\n      },\n      className: \"btnCheck\",\n      onClick: check,\n      children: \"CHECK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuizScreen, \"cHMpgkIJ/VWV8wKDJY/ZFoLQoKc=\", false, function () {\n  return [usePlayerItemsManager, useToast];\n});\n\n_c = QuizScreen;\nexport default QuizScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"sources":["/home/stud5c/Scrivania/KikisKey/WebGame/src/Components/QuizScreen/QuizScreen.js"],"names":["React","useContext","useState","motion","gameContext","usePlayerItemsManager","useToast","QuizScreen","gameData","setShowQuizScreen","aggiungiItem","risposta","setRisposta","showToast","check","current","quizCorrente","ricompensa","nomeQuiz","domanda","e","target","value","scale"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCR,UAAU,CAACG,WAAD,CAAlD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAmBL,qBAAqB,EAA9C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBP,QAAQ,EAA9B;;AAEA,QAAMQ,KAAK,GAAG,MAAM;AAClB,QAAIH,QAAQ,KAAKH,QAAQ,CAACO,OAAT,CAAiBC,YAAjB,CAA8BL,QAA/C,EAAyD;AACvDD,MAAAA,YAAY,CAACF,QAAQ,CAACO,OAAT,CAAiBC,YAAjB,CAA8BC,UAA/B,CAAZ;AACAJ,MAAAA,SAAS,CAAC,mBAAD,CAAT;AACD,KAHD,MAGO;AACLA,MAAAA,SAAS,CAAC,iBAAD,CAAT;AACD;;AACDJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BD,QAAQ,CAACO,OAAT,CAAiBC,YAAjB,CAA8BE;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA,gBAA+BV,QAAQ,CAACO,OAAT,CAAiBC,YAAjB,CAA8BG;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,MAAA,WAAW,EAAC,aAHd;AAIE,MAAA,QAAQ,EAAGC,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,MAAD,CAAQ,GAAR;AACE,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADd;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,OAAO,EAAET,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAnCD;;GAAMP,U;UAEqBF,qB,EAEHC,Q;;;KAJlBC,U;AAqCN,eAAeA,UAAf","sourcesContent":["import \"./QuizScreen.css\";\nimport React, { useContext, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { gameContext } from \"../../Hooks/useContext\";\nimport usePlayerItemsManager from \"../../Hooks/usePlayerItemsManager\";\nimport useToast from \"../../Hooks/useToast\";\n\nconst QuizScreen = () => {\n  const { gameData, setShowQuizScreen } = useContext(gameContext);\n  const { aggiungiItem } = usePlayerItemsManager();\n  const [risposta, setRisposta] = useState(\"\");\n  const { showToast } = useToast();\n\n  const check = () => {\n    if (risposta === gameData.current.quizCorrente.risposta) {\n      aggiungiItem(gameData.current.quizCorrente.ricompensa);\n      showToast(\"Risposta corretta\");\n    } else {\n      showToast(\"Risposta errata\");\n    }\n    setShowQuizScreen(false);\n  };\n\n  return (\n    <div className=\"contenitoreDomanda\">\n      <p className=\"titoloDomanda\">{gameData.current.quizCorrente.nomeQuiz}</p>\n      <p className=\"testoDomandata\">{gameData.current.quizCorrente.domanda}</p>\n      <input\n        type=\"text\"\n        className=\"inputRisposta\"\n        placeholder=\"risposta...\"\n        onChange={(e) => setRisposta(e.target.value)}\n      />\n      <motion.div\n        whileHover={{ scale: 1.025 }}\n        className=\"btnCheck\"\n        onClick={check}\n      >\n        CHECK\n      </motion.div>\n    </div>\n  );\n};\n\nexport default QuizScreen;\n"]},"metadata":{},"sourceType":"module"}