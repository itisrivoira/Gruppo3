{"ast":null,"code":"var _jsxFileName = \"/home/stud5c/Scrivania/KikisKey/WebGame/src/Components/Inventario/Inventario.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"./Inventario.css\";\nimport React, { useContext } from \"react\";\nimport { gameContext } from \"../../Hooks/useContext\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Inventario = () => {\n  _s();\n\n  const {\n    playerItems,\n    setPlayerItems\n  } = useContext(gameContext);\n\n  const handleDrop = (indexBox, item) => {\n    const {\n      id,\n      name\n    } = item; //console.log(id);\n    //console.log(name);\n\n    let tempArr = [...playerItems];\n\n    if (tempArr[indexBox].itemName === \"\") {\n      tempArr[id].itemName = \"\";\n      tempArr[indexBox].itemName = name;\n    } else {\n      let dragItemName = tempArr[id].itemName;\n      tempArr[id].itemName = tempArr[indexBox].itemName;\n      tempArr[indexBox].itemName = dragItemName;\n    }\n\n    setPlayerItems(tempArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenitorePlayerInventario\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"titoloPlayerInventario\",\n      children: \"Inventario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventario\",\n      children: playerItems.map(obj => {\n        if (obj.id >= 2) {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            id: obj.id,\n            itemName: obj.itemName,\n            dropFunz: item => handleDrop(obj.id, item)\n          }, obj.id + obj.itemName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Inventario, \"Yon+581RzG4rvVn6FpcUd0yPInU=\");\n\n_c = Inventario;\n\nconst Box = props => {\n  _s2();\n\n  const [, drop] = useDrop({\n    accept: \"imgItem\",\n    drop: props.dropFunz\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box \" + \"box\" + props.id,\n    ref: drop,\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      id: props.id,\n      name: props.itemName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Box, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n\n_c2 = Box;\n\nconst Item = props => {\n  _s3();\n\n  const [, drag] = useDrag(() => ({\n    type: \"imgItem\",\n    item: {\n      id: props.id,\n      name: props.name\n    }\n  }));\n\n  if (props.name !== \"\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img/items/\" + props.name + \".png\",\n        ref: drag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nomeItem\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s3(Item, \"MI5AnXDwEe/3qbRALgapnugQ4mk=\", false, function () {\n  return [useDrag];\n});\n\n_c3 = Item;\nexport default Inventario;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Inventario\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["/home/stud5c/Scrivania/KikisKey/WebGame/src/Components/Inventario/Inventario.js"],"names":["React","useContext","gameContext","useDrag","useDrop","Inventario","playerItems","setPlayerItems","handleDrop","indexBox","item","id","name","tempArr","itemName","dragItemName","map","obj","Box","props","drop","accept","dropFunz","Item","drag","type"],"mappings":";;;;;AAAA,OAAO,kBAAP;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCN,UAAU,CAACC,WAAD,CAAlD;;AAEA,QAAMM,UAAU,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACrC,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAeF,IAArB,CADqC,CAErC;AACA;;AAEA,QAAIG,OAAO,GAAG,CAAC,GAAGP,WAAJ,CAAd;;AAEA,QAAIO,OAAO,CAACJ,QAAD,CAAP,CAAkBK,QAAlB,KAA+B,EAAnC,EAAuC;AACrCD,MAAAA,OAAO,CAACF,EAAD,CAAP,CAAYG,QAAZ,GAAuB,EAAvB;AACAD,MAAAA,OAAO,CAACJ,QAAD,CAAP,CAAkBK,QAAlB,GAA6BF,IAA7B;AACD,KAHD,MAGO;AACL,UAAIG,YAAY,GAAGF,OAAO,CAACF,EAAD,CAAP,CAAYG,QAA/B;AACAD,MAAAA,OAAO,CAACF,EAAD,CAAP,CAAYG,QAAZ,GAAuBD,OAAO,CAACJ,QAAD,CAAP,CAAkBK,QAAzC;AACAD,MAAAA,OAAO,CAACJ,QAAD,CAAP,CAAkBK,QAAlB,GAA6BC,YAA7B;AACD;;AAEDR,IAAAA,cAAc,CAACM,OAAD,CAAd;AACD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGP,WAAW,CAACU,GAAZ,CAAiBC,GAAD,IAAS;AACxB,YAAIA,GAAG,CAACN,EAAJ,IAAU,CAAd,EAAiB;AACf,8BACE,QAAC,GAAD;AAEE,YAAA,EAAE,EAAEM,GAAG,CAACN,EAFV;AAGE,YAAA,QAAQ,EAAEM,GAAG,CAACH,QAHhB;AAIE,YAAA,QAAQ,EAAGJ,IAAD,IAAUF,UAAU,CAACS,GAAG,CAACN,EAAL,EAASD,IAAT;AAJhC,aACOO,GAAG,CAACN,EAAJ,GAASM,GAAG,CAACH,QADpB;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD;AACF,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzCD;;GAAMT,U;;KAAAA,U;;AA2CN,MAAMa,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,GAAGC,IAAH,IAAWhB,OAAO,CAAC;AACvBiB,IAAAA,MAAM,EAAE,SADe;AAEvBD,IAAAA,IAAI,EAAED,KAAK,CAACG;AAFW,GAAD,CAAxB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAE,SAAS,KAAT,GAAiBH,KAAK,CAACR,EAAvC;AAA2C,IAAA,GAAG,EAAES,IAAhD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAED,KAAK,CAACR,EAAhB;AAAoB,MAAA,IAAI,EAAEQ,KAAK,CAACL;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;IAAMI,G;UACad,O;;;MADbc,G;;AAaN,MAAMK,IAAI,GAAIJ,KAAD,IAAW;AAAA;;AACtB,QAAM,GAAGK,IAAH,IAAWrB,OAAO,CAAC,OAAO;AAC9BsB,IAAAA,IAAI,EAAE,SADwB;AAE9Bf,IAAAA,IAAI,EAAE;AAAEC,MAAAA,EAAE,EAAEQ,KAAK,CAACR,EAAZ;AAAgBC,MAAAA,IAAI,EAAEO,KAAK,CAACP;AAA5B;AAFwB,GAAP,CAAD,CAAxB;;AAKA,MAAIO,KAAK,CAACP,IAAN,KAAe,EAAnB,EAAuB;AACrB,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAE,eAAeO,KAAK,CAACP,IAArB,GAA4B,MAAtC;AAA8C,QAAA,GAAG,EAAEY;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyBL,KAAK,CAACP;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;AACF,CAdD;;IAAMW,I;UACapB,O;;;MADboB,I;AAgBN,eAAelB,UAAf","sourcesContent":["import \"./Inventario.css\";\n\nimport React, { useContext } from \"react\";\nimport { gameContext } from \"../../Hooks/useContext\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst Inventario = () => {\n  const { playerItems, setPlayerItems } = useContext(gameContext);\n\n  const handleDrop = (indexBox, item) => {\n    const { id, name } = item;\n    //console.log(id);\n    //console.log(name);\n\n    let tempArr = [...playerItems];\n\n    if (tempArr[indexBox].itemName === \"\") {\n      tempArr[id].itemName = \"\";\n      tempArr[indexBox].itemName = name;\n    } else {\n      let dragItemName = tempArr[id].itemName;\n      tempArr[id].itemName = tempArr[indexBox].itemName;\n      tempArr[indexBox].itemName = dragItemName;\n    }\n\n    setPlayerItems(tempArr);\n  };\n\n  return (\n    <div className=\"contenitorePlayerInventario\">\n      <p className=\"titoloPlayerInventario\">Inventario</p>\n      <div className=\"inventario\">\n        {playerItems.map((obj) => {\n          if (obj.id >= 2) {\n            return (\n              <Box\n                key={obj.id + obj.itemName}\n                id={obj.id}\n                itemName={obj.itemName}\n                dropFunz={(item) => handleDrop(obj.id, item)}\n              />\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Box = (props) => {\n  const [, drop] = useDrop({\n    accept: \"imgItem\",\n    drop: props.dropFunz,\n  });\n\n  return (\n    <div className={\"box \" + \"box\" + props.id} ref={drop}>\n      <Item id={props.id} name={props.itemName} />\n    </div>\n  );\n};\n\nconst Item = (props) => {\n  const [, drag] = useDrag(() => ({\n    type: \"imgItem\",\n    item: { id: props.id, name: props.name },\n  }));\n\n  if (props.name !== \"\") {\n    return (\n      <>\n        <img src={\"img/items/\" + props.name + \".png\"} ref={drag} />\n        <p className=\"nomeItem\">{props.name}</p>\n      </>\n    );\n  }\n};\n\nexport default Inventario;\n"]},"metadata":{},"sourceType":"module"}