{"ast":null,"code":"var _jsxFileName = \"/home/stud5c/Scrivania/KikisKey/WebGame/src/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useRef, useState } from \"react\"; // importo librerie esterne\n\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport ReactHowler from \"react-howler\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { AnimatePresence } from \"framer-motion\"; // importo i componenti\n\nimport Menu from \"../screens/Menu/Menu\";\nimport Gioca from \"../screens/Gioca/Gioca\";\nimport Opzioni from \"../screens/Opzioni/Opzioni\";\nimport Classifica from \"../screens/Classifica/Classifica\";\nimport Audio from \"../screens/Opzioni/screens/Audio/Audio\"; // importo object literal(all'inizio vuoto) che conterrÃ  i variabili globali\n\nimport { gameContext } from \"../Hooks/useContext\";\nimport useStanzeData from \"../Hooks/useStanzeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const location = useLocation(); // creo i variabili globali\n\n  const [flagMusica, setFlagMusica] = useState(false);\n  const playerRef = useRef(null);\n  const misteriosoRef = useRef(null);\n  const secondario1Ref = useRef(null);\n  const secondario2Ref = useRef(null);\n  const {\n    stanze\n  } = useStanzeData();\n  const stanzaLayer1Ref = useRef(null);\n  const stanzaLayer2Ref = useRef(null);\n  const [msgDialogBox, setMsgDialogBox] = useState(\"\");\n  const [playerItems, setPlayerItems] = useState([{\n    id: 0,\n    itemName: \"\"\n  }, {\n    id: 1,\n    itemName: \"\"\n  }, {\n    id: 2,\n    itemName: \"\"\n  }, {\n    id: 3,\n    itemName: \"\"\n  }, {\n    id: 4,\n    itemName: \"\"\n  }, {\n    id: 5,\n    itemName: \"\"\n  }, {\n    id: 6,\n    itemName: \"\"\n  }, {\n    id: 7,\n    itemName: \"\"\n  }]);\n  const [manoSelezionata, setManoSelezionata] = useState(1);\n  const [misteriosoItems, setMisteriosoItems] = useState([{\n    itemScambio: \"Patate\",\n    itemOfferto: \"Martello\"\n  }, {\n    itemScambio: \"Badge\",\n    itemOfferto: \"ID\"\n  }]);\n  const [showMisteriosoScreen, setShowMisteriosoScreen] = useState(false);\n  const [showQuizScreen, setShowQuizScreen] = useState(false);\n  const [showDistributoreScreen, setShowDistributoreScreen] = useState(false);\n  const gameData = useRef({\n    stanzaCorrente: \"chimica1\",\n    capitoloCorrente: 1,\n    quizCorrente: {\n      nomeQuiz: \"\",\n      domanda: \"\",\n      risposta: \"\",\n      ricompensa: \"\"\n    },\n    trovatoCloro: false,\n    trovatoIdrogeno: false,\n    creatoAcido: false,\n    portaSciolta: false,\n    monetaComuneRaccolta: false,\n    finestraRotta: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactHowler, {\n      src: \"/audio/musicaMenu.mp3\",\n      playing: flagMusica,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(gameContext.Provider, {\n        value: {\n          flagMusica,\n          setFlagMusica,\n          playerRef,\n          misteriosoRef,\n          secondario1Ref,\n          secondario2Ref,\n          stanze,\n          stanzaLayer1Ref,\n          stanzaLayer2Ref,\n          msgDialogBox,\n          setMsgDialogBox,\n          playerItems,\n          setPlayerItems,\n          manoSelezionata,\n          setManoSelezionata,\n          misteriosoItems,\n          setMisteriosoItems,\n          showMisteriosoScreen,\n          setShowMisteriosoScreen,\n          showQuizScreen,\n          setShowQuizScreen,\n          showDistributoreScreen,\n          setShowDistributoreScreen,\n          gameData\n        },\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          exitBeforeEnter: true,\n          initial: false,\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            location: location,\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/*\",\n              element: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Gioca\",\n              element: /*#__PURE__*/_jsxDEV(Gioca, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Opzioni\",\n              element: /*#__PURE__*/_jsxDEV(Opzioni, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Classifica\",\n              element: /*#__PURE__*/_jsxDEV(Classifica, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Opzioni/Audio\",\n              element: /*#__PURE__*/_jsxDEV(Audio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, location.pathname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game, \"7tCof8f8s94jLiC01CiqtI4vnk0=\", false, function () {\n  return [useLocation, useStanzeData];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/stud5c/Scrivania/KikisKey/WebGame/src/Game/Game.js"],"names":["useRef","useState","Route","Routes","useLocation","ReactHowler","HTML5Backend","DndProvider","AnimatePresence","Menu","Gioca","Opzioni","Classifica","Audio","gameContext","useStanzeData","Game","location","flagMusica","setFlagMusica","playerRef","misteriosoRef","secondario1Ref","secondario2Ref","stanze","stanzaLayer1Ref","stanzaLayer2Ref","msgDialogBox","setMsgDialogBox","playerItems","setPlayerItems","id","itemName","manoSelezionata","setManoSelezionata","misteriosoItems","setMisteriosoItems","itemScambio","itemOfferto","showMisteriosoScreen","setShowMisteriosoScreen","showQuizScreen","setShowQuizScreen","showDistributoreScreen","setShowDistributoreScreen","gameData","stanzaCorrente","capitoloCorrente","quizCorrente","nomeQuiz","domanda","risposta","ricompensa","trovatoCloro","trovatoIdrogeno","creatoAcido","portaSciolta","monetaComuneRaccolta","finestraRotta","pathname"],"mappings":"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","sourcesContent":["import \"./Game.css\";\nimport { useRef, useState } from \"react\";\n\n// importo librerie esterne\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport ReactHowler from \"react-howler\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { AnimatePresence } from \"framer-motion\";\n\n// importo i componenti\nimport Menu from \"../screens/Menu/Menu\";\nimport Gioca from \"../screens/Gioca/Gioca\";\nimport Opzioni from \"../screens/Opzioni/Opzioni\";\nimport Classifica from \"../screens/Classifica/Classifica\";\nimport Audio from \"../screens/Opzioni/screens/Audio/Audio\";\n\n// importo object literal(all'inizio vuoto) che conterrÃ  i variabili globali\nimport { gameContext } from \"../Hooks/useContext\";\n\nimport useStanzeData from \"../Hooks/useStanzeData\";\n\nconst Game = () => {\n  const location = useLocation();\n\n  // creo i variabili globali\n  const [flagMusica, setFlagMusica] = useState(false);\n\n  const playerRef = useRef(null);\n  const misteriosoRef = useRef(null);\n  const secondario1Ref = useRef(null);\n  const secondario2Ref = useRef(null);\n\n  const { stanze } = useStanzeData();\n  const stanzaLayer1Ref = useRef(null);\n  const stanzaLayer2Ref = useRef(null);\n  const [msgDialogBox, setMsgDialogBox] = useState(\"\");\n\n  const [playerItems, setPlayerItems] = useState([\n    { id: 0, itemName: \"\" },\n    { id: 1, itemName: \"\" },\n    { id: 2, itemName: \"\" },\n    { id: 3, itemName: \"\" },\n    { id: 4, itemName: \"\" },\n    { id: 5, itemName: \"\" },\n    { id: 6, itemName: \"\" },\n    { id: 7, itemName: \"\" },\n  ]);\n  const [manoSelezionata, setManoSelezionata] = useState(1);\n\n  const [misteriosoItems, setMisteriosoItems] = useState([\n    { itemScambio: \"Patate\", itemOfferto: \"Martello\" },\n    { itemScambio: \"Badge\", itemOfferto: \"ID\" },\n  ]);\n\n  const [showMisteriosoScreen, setShowMisteriosoScreen] = useState(false);\n  const [showQuizScreen, setShowQuizScreen] = useState(false);\n  const [showDistributoreScreen, setShowDistributoreScreen] = useState(false);\n\n  const gameData = useRef({\n    stanzaCorrente: \"chimica1\",\n    capitoloCorrente: 1,\n    quizCorrente: {\n      nomeQuiz: \"\",\n      domanda: \"\",\n      risposta: \"\",\n      ricompensa: \"\",\n    },\n\n    trovatoCloro: false,\n    trovatoIdrogeno: false,\n    creatoAcido: false,\n    portaSciolta: false,\n    monetaComuneRaccolta: false,\n    finestraRotta: false,\n  });\n\n  return (\n    <>\n      {/*componente per accendere la musica*/}\n      <ReactHowler src=\"/audio/musicaMenu.mp3\" playing={flagMusica} loop />\n\n      {/*componente provider restituito dal gameContext per fornire i variabili globali agli altri componenti*/}\n      <DndProvider backend={HTML5Backend}>\n        <gameContext.Provider\n          value={{\n            flagMusica,\n            setFlagMusica,\n            playerRef,\n            misteriosoRef,\n            secondario1Ref,\n            secondario2Ref,\n            stanze,\n            stanzaLayer1Ref,\n            stanzaLayer2Ref,\n            msgDialogBox,\n            setMsgDialogBox,\n            playerItems,\n            setPlayerItems,\n            manoSelezionata,\n            setManoSelezionata,\n            misteriosoItems,\n            setMisteriosoItems,\n            showMisteriosoScreen,\n            setShowMisteriosoScreen,\n            showQuizScreen,\n            setShowQuizScreen,\n            showDistributoreScreen,\n            setShowDistributoreScreen,\n            gameData,\n          }}\n        >\n          {/*componente per consentire animazione tra i componenti*/}\n\n          <AnimatePresence exitBeforeEnter initial={false}>\n            <Routes location={location} key={location.pathname}>\n              {/*Route: utilizzato per assegnare un path ad un componente esistente*/}\n              <Route path=\"/*\" element={<Menu />} />\n              <Route path=\"/Gioca\" element={<Gioca />} />\n              <Route path=\"/Opzioni\" element={<Opzioni />} />\n              <Route path=\"/Classifica\" element={<Classifica />} />\n              <Route path=\"/Opzioni/Audio\" element={<Audio />} />\n            </Routes>\n          </AnimatePresence>\n        </gameContext.Provider>\n      </DndProvider>\n    </>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}